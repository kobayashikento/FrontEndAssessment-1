[{"/Users/kentokobaysahi/Documents/GitHub/frontend-assessment-1/src/index.js":"1","/Users/kentokobaysahi/Documents/GitHub/frontend-assessment-1/src/reportWebVitals.js":"2","/Users/kentokobaysahi/Documents/GitHub/frontend-assessment-1/src/App.js":"3","/Users/kentokobaysahi/Documents/GitHub/frontend-assessment-1/src/Sections/LandingPage.js":"4","/Users/kentokobaysahi/Documents/GitHub/frontend-assessment-1/src/Sections/CurtainContent.js":"5","/Users/kentokobaysahi/Documents/GitHub/frontend-assessment-1/src/Sections/SectionRed.js":"6","/Users/kentokobaysahi/Documents/GitHub/frontend-assessment-1/src/Sections/Perks.js":"7","/Users/kentokobaysahi/Documents/GitHub/frontend-assessment-1/src/Sections/SectionYellow.js":"8","/Users/kentokobaysahi/Documents/GitHub/frontend-assessment-1/src/Components/Header.js":"9","/Users/kentokobaysahi/Documents/GitHub/frontend-assessment-1/src/Components/CurtainComponents/Slideshow.js":"10","/Users/kentokobaysahi/Documents/GitHub/frontend-assessment-1/src/Components/CurtainComponents/Shader.js":"11","/Users/kentokobaysahi/Documents/GitHub/frontend-assessment-1/src/Components/LandingPage/LandingPageContent.js":"12","/Users/kentokobaysahi/Documents/GitHub/frontend-assessment-1/src/Sections/SectionReview.js":"13"},{"size":500,"mtime":1611730192281,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":1611730192282,"results":"16","hashOfConfig":"15"},{"size":292,"mtime":1611897553905,"results":"17","hashOfConfig":"15"},{"size":4639,"mtime":1611952782925,"results":"18","hashOfConfig":"15"},{"size":526,"mtime":1611897554180,"results":"19","hashOfConfig":"15"},{"size":5819,"mtime":1611952782927,"results":"20","hashOfConfig":"15"},{"size":5925,"mtime":1611897554180,"results":"21","hashOfConfig":"15"},{"size":7939,"mtime":1611952782927,"results":"22","hashOfConfig":"15"},{"size":8285,"mtime":1611897554179,"results":"23","hashOfConfig":"15"},{"size":7393,"mtime":1611897554179,"results":"24","hashOfConfig":"15"},{"size":2486,"mtime":1611897554179,"results":"25","hashOfConfig":"15"},{"size":2024,"mtime":1611897554179,"results":"26","hashOfConfig":"15"},{"size":6817,"mtime":1611897554181,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"b1z0e1",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"30"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"30"},"/Users/kentokobaysahi/Documents/GitHub/frontend-assessment-1/src/index.js",[],["60","61"],"/Users/kentokobaysahi/Documents/GitHub/frontend-assessment-1/src/reportWebVitals.js",[],"/Users/kentokobaysahi/Documents/GitHub/frontend-assessment-1/src/App.js",[],"/Users/kentokobaysahi/Documents/GitHub/frontend-assessment-1/src/Sections/LandingPage.js",["62","63"],"/Users/kentokobaysahi/Documents/GitHub/frontend-assessment-1/src/Sections/CurtainContent.js",[],"/Users/kentokobaysahi/Documents/GitHub/frontend-assessment-1/src/Sections/SectionRed.js",[],"/Users/kentokobaysahi/Documents/GitHub/frontend-assessment-1/src/Sections/Perks.js",["64","65"],"import React from 'react';\n\nimport '../Assets/styles/perksStyle.css';\nimport '../Assets/styles/landingPage.scss';\nimport { Typography } from '@material-ui/core';\n\nconst Perks = (props) => {\n\n    const buttonTryRef = React.useRef();\n    const marginTopRatio = 327 / 1229;\n    const marginLeftRatio = 172 / 1920;\n\n    //states\n    const [btn1, setBtn1] = React.useState([0, 0]);\n\n    //responsive size change\n    React.useEffect(() => {\n        setBtn1([250 - buttonTryRef.current.getBoundingClientRect().width, 62 - buttonTryRef.current.getBoundingClientRect().height]);\n    }, [props.size])\n\n\n    return (\n        <div style={{ background: \"#191919 0% 0% no-repeat padding-box\", minHeight: `${1229 / 1080 * props.size[1]}px` }}>\n            <div ref={buttonTryRef} style={{ display: \"flex\", position: \"absolute\", right: `${77 / 1920 * props.size[0]}px`, marginTop: `${69 / 1229 * props.size[1]}px` }}>\n                <a style={{\n                    width: \"250px\", height: \"62px\", font: `normal normal bold ${18 / 1920 * props.size[0]}px/${23 / 1920 * props.size[0]}px Helvetica Neue`,\n                    transform: `scale(${props.size[0] / 1920}) translate(${btn1[0]}px, -${btn1[1]}px)`, letterSpacing: `${1.8 / 1920 * props.size[0]}px`\n                }} className=\"btn-mix-try-noborder\" data-text=\"TRY IT NOW\" />\n            </div>\n            <div style={{ display: \"flex\", flexDirection: \"column\", paddingTop: `${marginTopRatio * props.size[1]}px`, marginLeft: `${marginLeftRatio * props.size[0]}px` }}>\n                <Typography style={{\n                    textAlign: \"left\", font: `normal normal bold ${74 / 1920 * props.size[0]}px/${90 / 1920 * props.size[0]}px Helvetica Neue`,\n                    letterSpacing: `${7.4 / 1920 * props.size[0]}px`, color: \" #FFFFFF\", height: `${88 / 1080 * props.size[1]}px`\n                }}>\n                    PERKS\n                </Typography>\n                <div style={{ display: \"flex\", paddingLeft: \"1rem\", marginTop: `${83.5 / 1229 * props.size[1]}px` }}>\n                    <div>\n                        <div style={{ width: `${104.49 / 1920 * props.size[0]}px`, border: \"3px solid #D34848\" }} />\n                        <Typography style={{\n                            color: \"#D34848\", maxWidth: `${383 / 1920 * props.size[0]}px`, maxHeight: \"185px\", font: `normal normal bold ${51 / 1920 * props.size[0]}px/${62 / 1920 * props.size[0]}px Helvetica Neue`,\n                            letterSpacing: `${5.1 / 1920 * props.size[0]}px`, marginTop: `${27.5 / 1229 * props.size[1]}px`\n                        }}>\n                            Subscription Payment Model\n                        </Typography>\n                        <Typography style={{\n                            color: \"#FFFFFF\", maxWidth: `${433 / 1920 * props.size[0]}px`, maxHeight: \"163px\", font: `normal normal normal ${35 / 1920 * props.size[0]}px/${41 / 1920 * props.size[0]}px Helvetica Neue`,\n                            letterSpacing: `${3.5 / 1920 * props.size[0]}px`, marginTop: `${28 / 1229 * props.size[1]}px`\n                        }}>\n                            No commitment, cancel anytime. Never worry about forgetting a payment again!\n                        </Typography>\n                    </div>\n                    <div style={{ marginLeft: `${176 / 1920 * props.size[0]}px` }}>\n                        <div style={{ width: `${104.49 / 1920 * props.size[0]}px`, border: \"3px solid #1FE1E9\" }} />\n                        <Typography style={{\n                            color: \"#1FE1E9\", maxWidth: `${383 / 1920 * props.size[0]}px`, maxHeight: \"185px\", font: `normal normal bold ${51 / 1920 * props.size[0]}px/${62 / 1920 * props.size[0]}px Helvetica Neue`,\n                            letterSpacing: `${5.1 / 1920 * props.size[0]}px`, marginTop: `${27.5 / 1229 * props.size[1]}px`\n                        }}>\n                            No Fee Cancelation Policy\n                        </Typography>\n                        <Typography style={{\n                            color: \"#FFFFFF\", maxWidth: `${433 / 1920 * props.size[0]}px`, maxHeight: \"163px\", font: `normal normal normal ${35 / 1920 * props.size[0]}px/${41 / 1920 * props.size[0]}px Helvetica Neue`,\n                            letterSpacing: `${3.5 / 1920 * props.size[0]}px`, marginTop: `${28 / 1229 * props.size[1]}px`\n                        }}>\n                            No commitment, cancel anytime. Never worry about forgetting a payment again!\n                        </Typography>\n                    </div>\n                    <div style={{ marginLeft: `${176 / 1920 * props.size[0]}px` }}>\n                        <div style={{ width: `${104.49 / 1920 * props.size[0]}px`, border: \"3px solid #FFB33F\" }} />\n                        <Typography style={{\n                            color: \"#FFB33F\", maxWidth: `${383 / 1920 * props.size[0]}px`, maxHeight: \"185px\", font: `normal normal bold ${51 / 1920 * props.size[0]}px/${62 / 1920 * props.size[0]}px Helvetica Neue`,\n                            letterSpacing: `${5.1 / 1920 * props.size[0]}px`, marginTop: `${27.5 / 1229 * props.size[1]}px`\n                        }}>\n                            Subscription Payment Model\n                        </Typography>\n                        <Typography style={{\n                            color: \"#FFFFFF\", maxWidth: `${433 / 1920 * props.size[0]}px`, maxHeight: \"163px\", font: `normal normal normal ${35 / 1920 * props.size[0]}px/${41 / 1920 * props.size[0]}px Helvetica Neue`,\n                            letterSpacing: `${3.5 / 1920 * props.size[0]}px`, marginTop: `${28 / 1229 * props.size[1]}px`\n                        }}>\n                            No commitment, cancel anytime. Never worry about forgetting a payment again!\n                        </Typography>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default React.memo(Perks)","/Users/kentokobaysahi/Documents/GitHub/frontend-assessment-1/src/Sections/SectionYellow.js",["66","67","68"],"import React from 'react';\n\nimport '../Assets/styles/sectionYellow.css';\n\nimport gambino from '../Assets/pictures/Yellow/gambino_s.png';\n\nconst SectionYellow = (props) => {\n\n    const marginLeftRatio = 900 / 1920;\n    const tryBtnTop = 95 / 1080;\n    const tryBtnRight = 79 / 1920;\n\n    //refs\n    const buttonYellowRef = React.useRef();\n    const buttonTryRef = React.useRef();\n    const canvasRef = React.useRef();\n    const textRef = React.useRef();\n\n    // states\n    const [btn1, setBtn1] = React.useState([0, 0]);\n    const [btn2, setBtn2] = React.useState([0, 0]);\n\n    React.useEffect(() => {\n        if (buttonYellowRef.current) {\n            buttonYellowRef.current.onmousemove = function (e) {\n\n                var x = e.pageX - e.target.offsetLeft;\n                var y = e.pageY - e.target.offsetTop;\n\n                e.target.style.setProperty('--x', x + 'px');\n                e.target.style.setProperty('--y', y + 'px');\n            }\n        }\n    }, [buttonYellowRef])\n\n    React.useEffect(() => {\n        if (buttonTryRef.current) {\n            buttonTryRef.current.onmousemove = function (e) {\n\n                var x = e.pageX - e.target.offsetLeft;\n                var y = e.pageY - e.target.offsetTop;\n\n                e.target.style.setProperty('--x', x + 'px');\n                e.target.style.setProperty('--y', y + 'px');\n            }\n        }\n    }, [buttonTryRef])\n\n    React.useEffect(() => {\n        if (textRef.current) {\n            textRef.current.onmousemove = function (e) {\n\n                var x = e.pageX - e.target.offsetLeft;\n                var y = e.pageY - e.target.offsetTop;\n\n                e.target.style.setProperty('--x', x + 'px');\n                e.target.style.setProperty('--y', y + 'px');\n            }\n        }\n    }, [textRef])\n\n    // painting interaction\n    React.useEffect(() => {\n        if (canvasRef) {\n            let ctx = canvasRef.current;\n            let ctxCanvas = ctx.getContext('2d');\n            ctxCanvas.fillStyle = \"#FFB33F\"\n            ctxCanvas.fillRect(0, 0, 1920, 1080);\n            let brushRadius = 100;\n            const getBrushPos = (xRef, yRef) => {\n                var ctxRect = ctx.getBoundingClientRect();\n                return {\n                    x: Math.floor((xRef - ctxRect.left) / (ctxRect.right - ctxRect.left) * ctx.width),\n                    y: Math.floor((yRef - ctxRect.top) / (ctxRect.bottom - ctxRect.top) * ctx.height)\n                };\n            }\n\n            const drawDot = (mouseX, mouseY) => {\n                ctxCanvas.beginPath();\n                ctxCanvas.arc(mouseX, mouseY, brushRadius, 0, 2 * Math.PI, true);\n                ctxCanvas.fillStyle = '#000';\n                ctxCanvas.globalCompositeOperation = \"destination-out\";\n                ctxCanvas.fill();\n            }\n\n            ctx.addEventListener(\"mousemove\", function (e) {\n                var brushPos = getBrushPos(e.clientX, e.clientY);\n                drawDot(brushPos.x, brushPos.y);\n            }, false);\n\n        }\n    }, [canvasRef])\n\n    React.useEffect(() => {\n        setBtn1([338 - buttonYellowRef.current.getBoundingClientRect().width, 81 - buttonYellowRef.current.getBoundingClientRect().height]);\n        setBtn2([248 - buttonTryRef.current.getBoundingClientRect().width, 62 - buttonTryRef.current.getBoundingClientRect().height]);\n    }, [props.size])\n\n    return (\n        <div style={{ height: \"100vh\", background: \"#FFB33F 0% 0% no-repeat padding-box\", display: \"flex\" }}>\n            <button className=\"button-yellow-try\" ref={buttonTryRef} style={{ cursor: \"none\", transform: `scale(${props.size[0] / 1920}) translate(${btn2[0]}px, -${btn2[1]}px)`, marginTop: `${tryBtnTop * props.size[1]}px`, right: `${tryBtnRight * props.size[0]}px`, zIndex: 1 }}>\n                <span className=\"button-txt-yellow-try\">TRY IT NOW</span>\n            </button>\n            <canvas ref={canvasRef} width={props.size[0]} height={props.size[1]} style={{\n                backgroundImage: `url(${gambino})`, height: \"100%\", width: \"100%\", backgroundSize: \"cover\", position: \"absolute\",\n            }} />\n            <div style={{ display: \"flex\", marginLeft: `${marginLeftRatio * props.size[0]}px`, flexDirection: \"column\", justifyContent: \"center\", }}>\n                <span className=\"button-txt\">\n                    <span ref={textRef} style={{ font: `normal normal bold ${74 / 1920 * props.size[0]}px/${90 / 1920 * props.size[0]}px Helvetica Neue`, letterSpacing: `${7.4 / 1920 * props.size[0]}px` }}\n                        className=\"txt-h1\">FRONT ROW SEATS</span>\n                </span>\n                <span className=\"button-txt\" style={{ maxWidth: \"831px\", marginTop: `${23 / 1080 * props.size[1]}px`, font: `normal normal normal ${51 / 1920 * props.size[0]}px/${61 / 1920 * props.size[0]}px Helvetica Neue`, letterSpacing: `${5.1 / 1920 * props.size[0]}px` }}>\n                    <span className=\"txt-h2\">Experience concerts up close and personal.</span>\n                </span>\n                <button className=\"button-yellow\" ref={buttonYellowRef} style={{ cursor: \"none\", marginTop: `${46 / 1080 * props.size[1]}px`, transform: `scale(${props.size[0] / 1920}) translate(-${btn2[0]}px,-${btn1[1]}px)` }}>\n                    <span className=\"button-txt-yellow\">SEE DEMO</span>\n                </button>\n            </div>\n        </div>\n    )\n}\n\nexport default React.memo(SectionYellow);","/Users/kentokobaysahi/Documents/GitHub/frontend-assessment-1/src/Components/Header.js",["69"],"import React from 'react';\n\n// import dependencies\nimport DehazeIcon from '@material-ui/icons/Dehaze';\nimport { IconButton, Button, Typography } from '@material-ui/core';\n\nimport { Trail } from 'react-spring/renderprops'\n\nimport { useSpring, animated } from 'react-spring'\n\nconst Header = (props) => {\n    const wrapperRef = React.useRef(null);\n    const headLeftRatio = 83 / 1920;\n    const headMarginRatio = 37.87 / 1920;\n    const headTopRatio = 86.32 / 1080;\n\n    // states\n    const [navOpen, setNavOpen] = React.useState(false);\n    const [itemsOpen, setItemsOpen] = React.useState(false);\n    const [firstColor, setFirstColor] = React.useState(\"#FFFFFF\");\n    const [secondColor, setSecondColor] = React.useState(\"#FFFFFF\");\n    const [thirdColor, setThirdColor] = React.useState(\"#FFFFFF\");\n    const [headIconsColor, setHeadIconsColor] = React.useState(\"#FFFFFF\");\n    const [highlight, setHighlight] = React.useState(\"#FFFFFF\");\n    const [showWhat, setShowWhat] = React.useState(false);\n    const [showPerks, setShowPerks] = React.useState(false);\n    const [showPricing, setShowPricing] = React.useState(false);\n\n    // react components for menu list\n    const items = [\n        {\n            key: 1, content: <Button style={{ padding: \"0px\", backgroundColor: \"transparent\" }} onClick={() => handleWhatClick()}>\n                <Typography onMouseEnter={() => setShowWhat(true)} onMouseLeave={() => setShowWhat(false)} style={{\n                    textAlign: \"left\", font: `normal normal bold ${47 / 1920 * props.size[0]}px/${57 / 1920 * props.size[0]}px Helvetica Neue`, color: showWhat ? highlight : firstColor,\n                    letterSpacing: `${4.7 / 1920 * props.size[0]}px`,\n                }}>\n                    WHAT IS IT\n                    </Typography>\n            </Button>\n        },\n        {\n            key: 2,\n            content: <Button style={{ padding: \"0px\", marginTop: `${12 / 1920 * props.size[0]}px`, backgroundColor: \"transparent\" }} onClick={() => handlePerkClick()}>\n                <Typography onMouseEnter={() => setShowPerks(true)} onMouseLeave={() => setShowPerks(false)} style={{\n                    textAlign: \"left\",\n                    font: `normal normal bold ${47 / 1920 * props.size[0]}px/${57 / 1920 * props.size[0]}px Helvetica Neue`, color: showPerks ? highlight : secondColor, letterSpacing: `${4.7 / 1920 * props.size[0]}px`,\n                }}>\n                    PERKS\n                        </Typography>\n            </Button>\n        },\n        {\n            key: 3,\n            content: <Button style={{ padding: \"0px\", marginTop: `${12 / 1920 * props.size[0]}px`, backgroundColor: \"transparent\" }}>\n                <Typography onMouseEnter={() => setShowPricing(true)} onMouseLeave={() => setShowPricing(false)} style={{\n                    textAlign: \"left\",\n                    font: `normal normal bold ${47 / 1920 * props.size[0]}px/${57 / 1920 * props.size[0]}px Helvetica Neue`, color: showPricing ? highlight : thirdColor, letterSpacing: `${4.7 / 1920 * props.size[0]}px`,\n                }}>\n                    PRICING\n                    </Typography>\n            </Button>\n        }]\n\n    // handle click event for menu item clicks\n    const handleWhatClick = () => {\n        if (props.index === 1) {\n            window.scrollTo({\n                top: props.size[1] * 2,\n                left: 0,\n                behavior: 'smooth'\n            });\n            handleNavClick();\n        } else if (props.index === 2) {\n            window.scrollTo({\n                top: props.size[1] * 4.2,\n                left: 0,\n                behavior: 'smooth'\n            });\n            handleNavClick();\n        } else {\n            window.scrollTo({\n                top: props.size[1],\n                left: 0,\n                behavior: 'smooth'\n            });\n            handleNavClick();\n        }\n    }\n\n    const handlePerkClick = () => {\n        window.scrollTo({\n            top: props.size[1] * 3,\n            left: 0,\n            behavior: 'smooth'\n        });\n        handleNavClick();\n    }\n\n    // handle color change from scroll offset change \n    React.useEffect(() => {\n        switch (props.index) {\n            case 0:\n                setFirstColor(\"#FFFFFF\");\n                setSecondColor(\"#FFFFFF\");\n                setThirdColor(\"#FFFFFF\");\n                setHeadIconsColor(\"#FFFFFF\");\n                setHighlight(\"#FFFFFF\");\n                break;\n            case 1:\n                setFirstColor(\"#D34848\");\n                setSecondColor(\"#FFFFFF\");\n                setThirdColor(\"#FFFFFF\");\n                setHeadIconsColor(\"#D34848\");\n                setHighlight(\"#D34848\");\n                break;\n            case 2:\n                setFirstColor(\"#FFB33F\");\n                setSecondColor(\"#FFFFFF\");\n                setThirdColor(\"#FFFFFF\");\n                setHeadIconsColor(\"#FFB33F\");\n                setHighlight(\"#FFB33F\");\n                break;\n            case 3:\n                setFirstColor(\"#FFFFFF\");\n                setSecondColor(\"#000000\");\n                setThirdColor(\"#FFFFFF\");\n                setHeadIconsColor(\"#FFFFFF\");\n                setHighlight(\"#000000\");\n                break;\n            case 4:\n                setFirstColor(\"#1FE1E9\");\n                setSecondColor(\"#FFFFFF\");\n                setThirdColor(\"#FFFFFF\");\n                setHeadIconsColor(\"#1FE1E9\");\n                setHighlight(\"#1FE1E9\");\n                break;\n            default:\n        }\n    }, [props.index]);\n\n    // handle nav button click\n    const handleNavClick = () => {\n        if (!navOpen) {\n            setNavOpen(true);\n        } else if (navOpen) {\n            setItemsOpen(false);\n            setNavOpen(false);\n        }\n    }\n\n    // call back to delay showing the list items\n    const springCallback = () => {\n        if (navOpen) {\n            setItemsOpen(true);\n        }\n    }\n\n    // animation the circle expansion\n    let expandCircle = useSpring({\n        to: { transform: navOpen ? \"scale(1) \" : \"scale(0) \", left: navOpen ? \"-84px\" : \"-235px\", top: navOpen ? \"-142px\" : \"-235px\" },\n        from: { width: ` calc(240px + (592 - 240) * ((100vw - 300px) / (1600 - 300)))`, height: ` calc(240px + (592 - 240) * ((100vw - 300px) / (1600 - 300)))`, transform: \"scale(0)\", left: \"-235px\", top: \"-235px\", },\n        onRest: () => springCallback()\n    });\n\n    return (\n        <div style={{ position: \"fixed\", zIndex: 2020 }}>\n            <animated.div ref={wrapperRef} style={{ ...expandCircle, background: props.index === 3 ? \"#1FE1E9\" : \"#0B0B0B\", borderRadius: \"50% 55% 48%\", position: \"absolute\", boxShadow: \"0px 3px 6px #00000029\" }} />\n            <div style={{ display: \"flex\", display: \"flex\", flexDirection: \"column\", position: \"fixed\", left: `${props.size[0] * headLeftRatio}px`, top: `${headTopRatio * props.size[1]}px`, }}>\n                <div style={{ display: \"flex\" }}>\n                    <IconButton style={{ padding: \"0px\", borderRadius: \"4px\", backgroundColor: \"transparent\" }} onClick={() => handleNavClick()} >\n                        <DehazeIcon style={{ color: navOpen ? headIconsColor : \"#FFFFFF\", fontSize: `${56 / 1920 * props.size[0]}px` }} />\n                    </IconButton>\n                    <Typography style={{\n                        textAlign: \"left\", font: `normal normal normal ${48 / 1920 * props.size[0]}px/${57 / 1920 * props.size[0]}px Helvetica Neue`, color: navOpen ? headIconsColor : \"#FFFFFF\",\n                        letterSpacing: `${4.8 / 1920 * props.size[0]}px`, marginLeft: `${headMarginRatio * props.size[0]}px`\n                    }}>\n                        EXP|CON\n            </Typography>\n                </div>\n                <div style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"flex-start\", marginTop: `${26 / 1920 * props.size[0]}px` }}>\n                    {itemsOpen ? <Trail items={items} from={{ transform: `translate3d(0,${56 / 1920 * props.size[0]}px,0)`, opacity: 0 }} to={{ transform: 'translate3d(0,0px,0)', opacity: 1, }}>\n                        {item => prop => <span key={item.key} style={prop}>{item.content}</span>}\n                    </Trail> : null}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default React.memo(Header);","/Users/kentokobaysahi/Documents/GitHub/frontend-assessment-1/src/Components/CurtainComponents/Slideshow.js",[],"/Users/kentokobaysahi/Documents/GitHub/frontend-assessment-1/src/Components/CurtainComponents/Shader.js",[],"/Users/kentokobaysahi/Documents/GitHub/frontend-assessment-1/src/Components/LandingPage/LandingPageContent.js",["70","71"],"import React from 'react';\n\nimport Typography from '@material-ui/core/Typography';\n\nimport '../../Assets/styles/landingPage.scss';\n\nconst LandingPageContent = (props) => {\n\n    //ref\n    const btnRef = React.useRef();\n\n    //states\n    const [btn1, setBtn1] = React.useState([0, 0]);\n\n    React.useEffect(() => {\n        setBtn1([284 - btnRef.current.getBoundingClientRect().width, 79 - btnRef.current.getBoundingClientRect().height]);\n    }, [props.size])\n\n    return (\n        <div style={{ height: `fit-content`, width: \"100vw\", display: \"flex\", flexDirection: \"column\", alignItems: \"center\", }}>\n            <Typography style={{ font: `normal normal bold ${65 / 1920 * props.size[0]}px/${79 / 1920 * props.size[0]}px Helvetica Neue`, textAlign: \"left\", letterSpacing: `${6.5 / 1920 * props.size[0]}px`, }}>\n                INTERACTIVE CONCERT EXPERIENCE\n            </Typography>\n            <div style={{ display: \"flex\", flexDirection: \"column\", marginTop: `${30 / 1080 * props.size[1]}px` }}>\n                <Typography style={{\n                    font: `normal normal normal ${32 / 1920 * props.size[0]}px/${44 / 1920 * props.size[0]}px Helvetica Neue`, textAlign: \"center\", letterSpacing: `${3.2 / 1920 * props.size[0]}px`,\n                }}>\n                    Experience your favourite artists like never\n                            </Typography>\n                <Typography style={{\n                    font: `normal normal normal ${32 / 1920 * props.size[0]}px/${44 / 1920 * props.size[0]}px Helvetica Neue`, textAlign: \"center\", letterSpacing: `${3.2 / 1920 * props.size[0]}px`,\n                }}>\n                    before and from the comfort of your own home.\n                            </Typography>\n            </div>\n            <a ref={btnRef} style={{ marginTop: `${43 / 1080 * props.size[1]}px`, transform: `scale(${props.size[0] / 1920}) translateY(-${btn1[1]}px)` }} className=\"btn-mix-noborder\" data-text=\"TRY IT NOW\" />\n        </div>\n    )\n}\n\nexport default React.memo(LandingPageContent);","/Users/kentokobaysahi/Documents/GitHub/frontend-assessment-1/src/Sections/SectionReview.js",["72"],"import React from 'react';\n\nimport { Typography } from '@material-ui/core';\n\nimport '../Assets/styles/sectionReview.css';\n\nimport speakers_top from '../Assets/pictures/Review/small_speakers_top.png';\nimport speakers_bot from '../Assets/pictures/Review/small_speakers_bot.png';\n\nimport Rating from '@material-ui/lab/Rating';\n\nconst SectionReview = (props) => {\n    //refs\n    const buttonTryRef = React.useRef();\n    const [btn1, setBt1] = React.useState([0, 0])\n\n    // listening to button events\n    React.useEffect(() => {\n        if (buttonTryRef.current) {\n            buttonTryRef.current.onmousemove = function (e) {\n\n                var x = e.pageX - e.target.offsetLeft;\n                var y = e.pageY - e.target.offsetTop;\n\n                e.target.style.setProperty('--x', x + 'px');\n                e.target.style.setProperty('--y', y + 'px');\n            }\n        }\n    }, [buttonTryRef])\n\n    // React.useEffect(() => {\n    //     setBt1([338 - buttonTryRef.current.getBoundingClientRect().width, 81 - buttonTryRef.current.getBoundingClientRect().height]);\n    // }, [props.size])\n\n    return (\n        <div style={{ height: \"100vh\", background: \"#1FE1E9 0% 0% no-repeat padding-box\" }}>\n            <button className=\"button-review-try\" ref={buttonTryRef} style={{\n                transform: `scale(${props.size[0] / 1920}) translate(${btn1[0]}px, -${btn1[1]}px)`,\n                marginTop: `${79 / 1080 * props.size[1]}px`, right: `${62 / 1920 * props.size[0]}px`, zIndex: 1\n            }}>\n                <span className=\"button-txt-review-try\">TRY IT NOW</span>\n            </button>\n            <div style={{ display: \"flex\", flexDirection: \"column\", position: \"absolute\", left: `${54.85 / 1920 * props.size[0]}px`, paddingTop: `${284.4 / 1080 * props.size[1]}px` }}>\n                <img alt=\"right_small_speakers\" style={{ position: \"absolute\", width: `${493 / 1920 * props.size[0]}px`, height: `${408 / 1080 * props.size[1]}px`, background: `transparent 0% 0 % no - repeat padding- box` }} src={speakers_top} />\n                <img alt=\"left_small_speakers\" style={{ paddingTop: `${260 / 1080 * props.size[1]}px`, marginLeft: `${(150.7 - 54.85) / 1920 * props.size[0]}px`, width: `${495 / 1920 * props.size[0]}px`, height: `${408 / 1080 * props.size[1]}px`, background: `transparent 0% 0 % no - repeat padding- box` }} src={speakers_bot} />\n            </div>\n            <div style={{ display: \"flex\", flexDirection: \"column\", paddingTop: `${384 / 1080 * props.size[1]}px`, marginLeft: `${659 / 1920 * props.size[0]}px` }}>\n                <Typography style={{\n                    textAlign: \"left\", font: `normal normal bold ${74 / 1920 * props.size[0]}px/${90 / 1920 * props.size[0]}px Helvetica Neue`,\n                    letterSpacing: `${7.4 / 1920 * props.size[0]}px`, color: \"#FFFFFF\", height: `${88 / 1080 * props.size[1]}px`\n                }}>\n                    Reviews\n                </Typography>\n                <div style={{ display: \"flex\" }}>\n                    <div style={{ display: \"flex\", flexDirection: \"column\", paddingTop: `${66 / 1080 * props.size[1]}px` }}>\n                        <Rating name=\"read-only\" size=\"large\" value={5} readOnly style={{ color: \"#0B0B0B\" }} />\n                        <Typography style={{\n                            font: `normal normal bold ${35 / 1920 * props.size[0]}px / ${43 / 1920 * props.size[0]}px Helvetica Neue`,\n                            color: \"#FFFFFF\", letterSpacing: `${3.5 / 1920 * props.size[0]}px`, paddingTop: `${25.91 / 1080 * props.size[1]}px`\n                        }}>\n                            ARTIST\n                        </Typography>\n                        <Typography style={{\n                            font: `normal normal normal ${35 / 1920 * props.size[0]}px / ${41 / 1920 * props.size[0]}px Helvetica Neue`,\n                            color: \"#191919\", letterSpacing: `${3.5 / 1920 * props.size[0]}px`, paddingTop: `${24 / 1080 * props.size[1]}px`, width: `${308 / 1920 * props.size[0]}px`\n                        }}>\n                            “Love it, it’s the Best.I can’t live without it!”\n                        </Typography>\n                    </div>\n                    <div style={{ display: \"flex\", flexDirection: \"column\", paddingTop: `${66 / 1080 * props.size[1]}px`, paddingLeft: `${117 / 1920 * props.size[0]}px` }}>\n                        <Rating name=\"read-only\" size=\"large\" value={5} readOnly style={{ color: \"#0B0B0B\" }} />\n                        <Typography style={{\n                            font: `normal normal bold ${35 / 1920 * props.size[0]}px / ${43 / 1920 * props.size[0]}px Helvetica Neue`,\n                            color: \"#FFFFFF\", letterSpacing: `${3.5 / 1920 * props.size[0]}px`, paddingTop: `${25.91 / 1080 * props.size[1]}px`\n                        }}>\n                            PRODUCER\n                        </Typography>\n                        <Typography style={{\n                            font: `normal normal normal ${35 / 1920 * props.size[0]}px / ${41 / 1920 * props.size[0]}px Helvetica Neue`,\n                            color: \"#191919\", letterSpacing: `${3.5 / 1920 * props.size[0]}px`, paddingTop: `${24 / 1080 * props.size[1]}px`, width: `${308 / 1920 * props.size[0]}px`\n                        }}>\n                            “Love it, it’s the Best.I can’t live without it!”\n                        </Typography>\n                    </div>\n                    <div style={{ display: \"flex\", flexDirection: \"column\", paddingTop: `${66 / 1080 * props.size[1]}px`, paddingLeft: `${117 / 1920 * props.size[0]}px` }}>\n                        <Rating name=\"read-only\" size=\"large\" value={5} readOnly style={{ color: \"#0B0B0B\" }} />\n                        <Typography style={{\n                            font: `normal normal bold ${35 / 1920 * props.size[0]}px / ${43 / 1920 * props.size[0]}px Helvetica Neue`,\n                            color: \"#FFFFFF\", letterSpacing: `${3.5 / 1920 * props.size[0]}px`, paddingTop: `${25.91 / 1080 * props.size[1]}px`\n                        }}>\n                            MUSIC FAN\n                        </Typography>\n                        <Typography style={{\n                            font: `normal normal normal ${35 / 1920 * props.size[0]}px / ${41 / 1920 * props.size[0]}px Helvetica Neue`,\n                            color: \"#191919\", letterSpacing: `${3.5 / 1920 * props.size[0]}px`, paddingTop: `${24 / 1080 * props.size[1]}px`, width: `${308 / 1920 * props.size[0]}px`\n                        }}>\n                            “Love it, it’s the Best.I can’t live without it!”\n                        </Typography>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default React.memo(SectionReview)",{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","severity":1,"message":"78","line":53,"column":8,"nodeType":"79","endLine":53,"endColumn":10,"suggestions":"80"},{"ruleId":"77","severity":1,"message":"81","line":70,"column":8,"nodeType":"79","endLine":70,"endColumn":19,"suggestions":"82"},{"ruleId":"83","severity":1,"message":"84","line":25,"column":17,"nodeType":"85","endLine":28,"endColumn":78},{"ruleId":"86","severity":1,"message":"87","line":25,"column":17,"nodeType":"85","endLine":28,"endColumn":78},{"ruleId":"77","severity":1,"message":"88","line":107,"column":8,"nodeType":"79","endLine":107,"endColumn":19,"suggestions":"89"},{"ruleId":"90","severity":1,"message":"91","line":145,"column":74,"nodeType":"92","messageId":"93","endLine":145,"endColumn":82},{"ruleId":"90","severity":1,"message":"91","line":155,"column":76,"nodeType":"92","messageId":"93","endLine":155,"endColumn":84},{"ruleId":"90","severity":1,"message":"94","line":168,"column":44,"nodeType":"92","messageId":"93","endLine":168,"endColumn":51},{"ruleId":"83","severity":1,"message":"84","line":36,"column":13,"nodeType":"85","endLine":36,"endColumn":210},{"ruleId":"86","severity":1,"message":"87","line":36,"column":13,"nodeType":"85","endLine":36,"endColumn":210},{"ruleId":"95","severity":1,"message":"96","line":15,"column":18,"nodeType":"97","messageId":"98","endLine":15,"endColumn":24},"no-native-reassign",["99"],"no-negated-in-lhs",["100"],"react-hooks/exhaustive-deps","React Hook React.useLayoutEffect has a missing dependency: 'handleScroll'. Either include it or remove the dependency array.","ArrayExpression",["101"],"React Hook React.useEffect has a missing dependency: 'size'. Either include it or remove the dependency array.",["102"],"jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","React Hook React.useEffect has a missing dependency: 'props.size'. Either include it or remove the dependency array.",["103"],"no-dupe-keys","Duplicate key 'position'.","ObjectExpression","unexpected","Duplicate key 'display'.","no-unused-vars","'setBt1' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation",{"desc":"104","fix":"105"},{"desc":"106","fix":"107"},{"desc":"108","fix":"109"},"Update the dependencies array to be: [handleScroll]",{"range":"110","text":"111"},"Update the dependencies array to be: [cursorRef, size]",{"range":"112","text":"113"},"Update the dependencies array to be: [canvasRef, props.size]",{"range":"114","text":"115"},[1848,1850],"[handleScroll]",[2405,2416],"[cursorRef, size]",[3964,3975],"[canvasRef, props.size]"]